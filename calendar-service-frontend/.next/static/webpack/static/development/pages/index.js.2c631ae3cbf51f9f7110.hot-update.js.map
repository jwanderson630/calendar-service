{"version":3,"file":"static/webpack/static/development/pages/index.js.2c631ae3cbf51f9f7110.hot-update.js","sources":["webpack:///./components/SignIn.js","webpack:///./components/SignUp.js","webpack:///./pages/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUser(email: $email, password: $password) {\n      id\n      token\n    }\n  }\n`;\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return (\n    <Mutation mutation={SIGNIN_MUTATION} variables={{ email, password }}>\n      {(signin, { loading, error }) => (\n        <div>\n          <h2>Sign In</h2>\n          <form\n            onSubmit={async e => {\n              e.preventDefault();\n              const user = await signin();\n              console.log(user);\n            }}\n            disabled={loading}\n            aria-busy={loading}\n          >\n            <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" required />\n            <input value={password} onChange={e => setPassword(e.target.value)} type=\"password\" required />\n            <button type=\"submit\">Sign in</button>\n          </form>\n        </div>\n      )}\n    </Mutation>\n  );\n};\n\nexport default SignIn;\n","import { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!, $password: String!) {\n    signupUser(email: $email, password: $password) {\n      id\n      token\n    }\n  }\n`;\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return (\n    <Mutation mutation={SIGNUP_MUTATION} variables={{ email, password }}>\n      {(signUp, { loading, error }) => (\n        <div>\n          <h2>Sign Up</h2>\n          <form\n            onSubmit={async e => {\n              e.preventDefault();\n              const user = await signUp();\n            }}\n            disabled={loading}\n            aria-busy={loading}\n          >\n            <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" required />\n            <input value={password} onChange={e => setPassword(e.target.value)} type=\"password\" required />\n            <button type=\"submit\">Sign up</button>\n          </form>\n        </div>\n      )}\n    </Mutation>\n  );\n};\n\nexport default SignUp;\n","import { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport SignIn from \"../components/SignIn\";\nimport SignUp from \"../components/SignUp\";\n\nconst ALL_EVENTS = gql`\n  query ALL_EVENTS {\n    allEvents {\n      createdBy {\n        id\n        email\n      }\n      id\n      title\n    }\n  }\n`;\n\nconst Home = () => {\n  return (\n    <Query query={ALL_EVENTS}>\n      {({ data, error, loading }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error: {error.message}</p>;\n        return (\n          <>\n            <SignIn />\n            <SignUp />\n            {data.allEvents.length ? data.allEvents.map(event => <div>{event.title}</div>) : <div>No events were found :(</div>}\n          </>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAoBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxbA;AAmBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;;;;A","sourceRoot":""}